set nocompatible
set clipboard=unnamed
set exrc
filetype off

filetype plugin indent on
syntax on
syntax enable
language en_US

set background=dark
set foldmethod=indent
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab

set number
set relativenumber

set hlsearch
set incsearch
set mouse=a
set laststatus=2 "airline
set list                                            "Display unprintable characters f12 - switches
set listchars=tab:•\ ,trail:•,extends:»,precedes:«  "Unprintable chars mapping

{% if ansible_os_family|lower == 'darwin' %}
let g:python_host_prog = '/usr/local/bin/python2'
let g:python3_host_prog = '/usr/local/bin/python3'
{% else %}
let g:python_host_prog = '/usr/bin/python2'
let g:python3_host_prog = '/usr/bin/python3'
{% endif %}

let python_highlight_all=1

call plug#begin('{{ plugin_dir }}')

Plug 'Shougo/vimproc.vim', {'do' : 'make'}
Plug 'skywind3000/asyncrun.vim'
Plug 'sheerun/vim-polyglot'
Plug 'moll/vim-node'
Plug 'Chiel92/vim-autoformat'
Plug 'flazz/vim-colorschemes'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'mattn/emmet-vim'
Plug 'marijnh/tern_for_vim'
Plug 'raimondi/delimitmate'
Plug 'w0rp/ale'
Plug 'majutsushi/tagbar'
Plug 'jelera/vim-javascript-syntax'
Plug 'christoomey/vim-tmux-navigator'
Plug 'christoomey/vim-tmux-runner'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-rails'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-unimpaired'
Plug 'kshenoy/vim-signature'
Plug 'terryma/vim-multiple-cursors'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'junegunn/vim-slash'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'beloglazov/vim-online-thesaurus'
Plug 'editorconfig/editorconfig-vim'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'roxma/nvim-completion-manager'
Plug 'roxma/nvim-cm-tern',  {'do': 'npm install'}
Plug 'racer-rust/vim-racer'
Plug 'roxma/nvim-cm-racer'
Plug 'ludovicchabant/vim-gutentags'
Plug 'janko-m/vim-test'
Plug 'fatih/vim-go'
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'

call plug#end()

colorscheme solarized

"Functions {{{
function ApplyJavascriptConfig()
  set errorformat=%f\(%l\\,%c\):\ %trror\ TS%n:\ %m
  set makeprg=tsc\ --noEmit
endfunction

function! DistractionFreeModeOn()
  :silent exec "!tmux set -g status off"
  color seoul256
  Goyo
  Limelight0.5
endfunction

function! DistractionFreeModeOff()
  :silent exec "!tmux set -g status on"
  Limelight!
  Goyo!
  color solarized
endfunction
"}}}

"UltiSnips {{{
let g:UltiSnipsExpandTrigger="<c-j>"
"}}}


"Airline {{{
let g:airline_theme='powerlineish'
let g:airline_powerline_fonts = 1
let g:airline_skip_empty_sections = 1
"}}}

"Emmet {{{
let g:user_emmet_leader_key='<c-y>'
"}}}

"Cursor {{{
autocmd GUIEnter * set vb t_vb= " for your GUI
autocmd VimEnter * set vb t_vb=

let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"
"}}}

"Temp Files {{{
set directory=~/.vim/swapfiles//
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe,*.pyc
"}}}


"ALE {{{
let g:ale_sign_column_always = 1
let g:ale_sign_error = '>'
let g:ale_sign_warning = '-'

let g:ale_fixers = {
\   'javascript': [
\       'eslint',
\       'prettier',
\   ],
\   'python': [
\        'add_blank_lines_for_python_control_statements',
\        'autopep8',
\        'isort',
\        'yapf',
\   ]
\}

let g:ale_javascript_prettier_options = '--single-quote'
let g:ale_rust_rls_executable = 'rls'
"}}}

"LSP Settings
if executable('typescript-language-server')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'typescript-language-server',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'typescript-language-server', '--stdio']},
        \ 'root_uri':{server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'tsconfig.json'))},
        \ 'whitelist': ['typescript', 'javascript', 'javascript.jsx'],
        \ })
endif


"AsyncRun Settings {{{
let g:asyncrun_open = 8
command! -bang -nargs=* -complete=file Make AsyncRun -program=make @ <args>
"}}}

"Typescript/JavaScript Settings {{{
augroup filetype_javascript
    autocmd!
    autocmd FileType javascript.jsx call ApplyJavascriptConfig()
augroup END
"}}}


"VIM Test {{{
let test#strategy = "neovim"
let test#python#runner = 'pytest'

nmap <silent> tn :TestNearest<CR>
nmap <silent> tf :TestFile<CR>
nmap <silent> ts :TestSuite<CR>
nmap <silent> tl :TestLast<CR>
nmap <silent> tg :TestVisit<CR>
"end vim-test settings
"}}}


"Syntax Highlighting {{{
hi link pythonImport Include
hi link pythonBuiltinFunc PreProc
"}}}

"Keymaps {{{
noremap <plug>(slash-after) zz
if has('timers')
  " Blink 2 times with 50ms interval
  noremap <expr> <plug>(slash-after) 'zz'.slash#blink(2, 50)
endif

nnoremap df= :call DistractionFreeModeOn()<CR>
nnoremap df- :call DistractionFreeModeOff()<CR>
nnoremap <C-p> :GFiles<CR>

inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
"}}}

set secure
